/**
 * @file
 * VuoList_PbxShaderUniform C type definition.
 *
 */

#ifndef VuoList_PbxShaderUniform_H
#define VuoList_PbxShaderUniform_H

/**
 * @ingroup VuoTypes
 * @defgroup VuoList_PbxShaderUniform VuoList_PbxShaderUniform
 * A list of @ref PbxShaderUniform elements.
 *
 * @{
 */

// This header is generated by vuo/type/list/generateVariants.sh.

#if defined(DOXYGEN) || !defined(VuoList_PbxShaderUniform_TYPE_DEFINED)
/// @{
/**
 * A list of @ref PbxShaderUniform elements.
 */
typedef const struct VuoList_PbxShaderUniform_struct { void *l; } * VuoList_PbxShaderUniform;
/// @}
#endif

/**
 * Creates a new list of @ref PbxShaderUniform elements.
 */
VuoList_PbxShaderUniform VuoListCreate_PbxShaderUniform(void);

/**
 * Creates a new list of `count` instances of `value`.
 *
 * Use this in conjunction with @ref VuoListGetData_PbxShaderUniform to quickly initialize a large list.
 */
VuoList_PbxShaderUniform VuoListCreateWithCount_PbxShaderUniform(const unsigned long count, const PbxShaderUniform value);

/**
 * Makes a shallow copy of `list` — its items are retained (not copied) by the new list.
 */
VuoList_PbxShaderUniform VuoListCopy_PbxShaderUniform(const VuoList_PbxShaderUniform list);

/**
 * Returns the @ref PbxShaderUniform at @c index.
 * Index values start at 1.
 * If the list has no items, returns a default value.
 * Attempting to access an out-of-bounds index returns the first item in the list (if the index is 0), or last item in the list (if the index is greater than the list size).
 */
PbxShaderUniform VuoListGetValue_PbxShaderUniform(const VuoList_PbxShaderUniform list, const unsigned long index);

/**
 * Returns a pointer to a C array containing the list items.
 *
 * Use this if you need a fast way to get or change multiple list items.
 *
 * You can modify values in the list by changing them in this array.
 * Just don't attempt to access beyond the list size.
 *
 * The pointer becomes invalid if you modify the list size using other functions
 * (e.g., Insert, Prepend, Append, Cut, Remove);
 * if you use those functions, just get a new pointer by calling this function again.
 *
 * If the list has no items, returns NULL.
 *
 * The pointer remains owned by the list; don't free it.
 */
PbxShaderUniform *VuoListGetData_PbxShaderUniform(const VuoList_PbxShaderUniform list);

/**
 * Changes the @ref PbxShaderUniform at @c index.
 * Index values start at 1.
 * If the list has no items, nothing is changed.
 * Attempting to change an out-of-bounds index changes the first item in the list (if the index is 0), or last item in the list (if the index is greater than the list size).
 */
void VuoListSetValue_PbxShaderUniform(const VuoList_PbxShaderUniform list, const PbxShaderUniform value, const unsigned long index);

/**
 * Inserts the `PbxShaderUniform` immediately before `index`.
 * Index values start at 1.
 * Inserting at index 0 prepends the value to the list.
 * Inserting at an index beyond the last value in the list appends the value to the list.
 */
void VuoListInsertValue_PbxShaderUniform(const VuoList_PbxShaderUniform list, const PbxShaderUniform value, const unsigned long index);

/**
 * Prepends @c value to @c list.
 */
void VuoListPrependValue_PbxShaderUniform(VuoList_PbxShaderUniform list, const PbxShaderUniform value);

/**
 * Appends @c value to @c list.
 */
void VuoListAppendValue_PbxShaderUniform(VuoList_PbxShaderUniform list, const PbxShaderUniform value);

/**
 * Swaps the value at `indexA` with the value at `indexB`.
 */
void VuoListExchangeValues_PbxShaderUniform(VuoList_PbxShaderUniform list, const unsigned long indexA, const unsigned long indexB);

#ifdef PbxShaderUniform_SUPPORTS_COMPARISON
/**
 * Sorts `list`.
 */
void VuoListSort_PbxShaderUniform(VuoList_PbxShaderUniform list);

/**
 * Returns true if the two lists are equivalent.
 *
 * NULL lists are never equal to non-NULL lists (even empty lists).
 */
bool VuoList_PbxShaderUniform_areEqual(const VuoList_PbxShaderUniform a, const VuoList_PbxShaderUniform b);

/**
 * Returns true if `a` < `b`.
 */
bool VuoList_PbxShaderUniform_isLessThan(const VuoList_PbxShaderUniform a, const VuoList_PbxShaderUniform b);
#endif

/**
 * Generates a random permutation of `list`.
 *
 * `chaos` ranges from 0 to 1.  When `chaos` is 1, a full Fisher–Yates shuffle is performed.  When less than 1, fewer iterations are performed.
 */
void VuoListShuffle_PbxShaderUniform(VuoList_PbxShaderUniform list, const double chaos);

/**
 * Reverses the order of the items in `list`.
 */
void VuoListReverse_PbxShaderUniform(VuoList_PbxShaderUniform list);

/**
 * Removes items from the list except those in the range specified by `startIndex` and `itemCount`.
 */
void VuoListCut_PbxShaderUniform(VuoList_PbxShaderUniform list, const signed long startIndex, const unsigned long itemCount);

/**
 * Removes the first value from @c list.
 */
void VuoListRemoveFirstValue_PbxShaderUniform(VuoList_PbxShaderUniform list);

/**
 * Removes the last value from @c list.
 */
void VuoListRemoveLastValue_PbxShaderUniform(VuoList_PbxShaderUniform list);

/**
 * Removes all values from @c list.
 */
void VuoListRemoveAll_PbxShaderUniform(VuoList_PbxShaderUniform list);

/**
 * Removes the `PbxShaderUniform` at `index`.
 * Index values start at 1.
 * Attempting to remove index 0 or an index beyond the last value in the list has no effect.
 */
void VuoListRemoveValue_PbxShaderUniform(VuoList_PbxShaderUniform list, const unsigned long index);

/**
 * Returns the number of elements in @c list.
 */
unsigned long VuoListGetCount_PbxShaderUniform(const VuoList_PbxShaderUniform list);

/**
 * Decodes the JSON object @c js to create a new value.
 *
 * @eg{
 *	["uno", "dos", "tres", "catorce"]
 * }
 */
VuoList_PbxShaderUniform VuoList_PbxShaderUniform_makeFromJson(struct json_object * js);

/**
 * Encodes @c value as a JSON object.
 */
struct json_object * VuoList_PbxShaderUniform_getJson(const VuoList_PbxShaderUniform value);

/**
 * Produces a brief human-readable summary of @c value.
 */
char * VuoList_PbxShaderUniform_getSummary(const VuoList_PbxShaderUniform value);

/// @{
/**
 * Automatically generated function.
 */
VuoList_PbxShaderUniform VuoList_PbxShaderUniform_makeFromString(const char *str);
char * VuoList_PbxShaderUniform_getString(const VuoList_PbxShaderUniform value);
/// @}

/**
 * @}
 */

#endif
